import glob
from itertools import combinations

configfile: "config.yaml"

DATA_DIR = config["data_dir"]
OUT_DIR = config["out_dir"]
RESULTS_DIR = config["results_dir"]
LOG_DIR = config["log_dir"]
TOOLS_DIR = config["tools_dir"]

SAMPLE_NAMES = config["samples"].keys()
SAMPLE_PAIRS = list(combinations(SAMPLE_NAMES, 2))


include: "rules/fastq_concat.smk"
include: "rules/sample_concat.smk"
include: "rules/fastq_qc_plong.smk"
include: "rules/kraken2_taxonomic_classification.smk"
include: "rules/bracken.smk"
include: "rules/krona_visualisation.smk"
include: "rules/kraken_biom.smk"
include: "rules/faprotax.smk"
include: "rules/generate_pathway_bubble_plot.smk"
include: "rules/generate_sankey.smk"
include: "rules/calculate_alpha_diversity.smk"
include: "rules/calculate_beta_diversity.smk"

rule all:
    input:
        ""
        expand(f"{OUT_DIR}/fastq/{{barcode}}.fastq.gz", barcode=config["sample_barcodes"]["in_lagoon"] + config["sample_barcodes"]["out_lagoon"]),
        expand(f"{OUT_DIR}/combined_fastq/{{sample}}.fastq", sample=SAMPLE_NAMES)

        faprotax_function_table=expand(f"{RESULTS_DIR}/faprotax/{{sample}}/{{sample}}_function_table.tsv", sample=SAMPLE_NAMES),
        faprotax_sub_groups=expand(f"{RESULTS_DIR}/faprotax/{{sample}}/sub_groups/", sample=SAMPLE_NAMES),
        alpha_diversity=expand(f"{RESULTS_DIR}/alpha/{{sample}}_alpha.txt", sample=SAMPLE_NAMES),
        beta_diversity=expand(
            f"{RESULTS_DIR}/beta/{{sample1}}_vs_{{sample2}}.txt",
            zip,
            sample1=[p[0] for p in SAMPLE_PAIRS],
            sample2=[p[1] for p in SAMPLE_PAIRS]
        ),


        sankey_plot=expand(f"{RESULTS_DIR}/sankey/{{sample}}.html", sample=SAMPLE_NAMES),
        krona_vis=expand(f"{RESULTS_DIR}/krona/{{sample}}_krona.html", sample=SAMPLE_NAMES)
